- name: main
  remote_user: root
  hosts: server_to_be_secured
  vars_files:
    - variables.yml

  vars:
    sshd_config: /etc/ssh/sshd_config
    ubuntu_common_required_packages:
      - ufw
      - fail2ban
      - unattended-upgrades

  gather_facts: no

  pre_tasks:
    - raw: apt-get -y install python-simplejson

  tasks:
    - name: Upgrade packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Create {{ server_manager_user }} user
      user: name="{{ server_manager_user }}"
            password="{{ server_manager_user_password | password_hash('sha512') }}"
            state=present
            shell=/bin/bash
            generate_ssh_key=yes
            groups="sudo"

    - name: Set authorized key took from github using the users in github_users variable
      with_items: "{{ github_users }}"
      authorized_key:
        user: "{{ server_manager_user }}"
        state: present
        key: https://github.com/{{ item }}.keys

    - name: Change permission of the .ssh/authorized_keys to 400
      file: dest=/home/deploy/.ssh/authorized_keys  mode=400

    - name: Disable empty password login
      lineinfile: dest={{ sshd_config }} regexp="^#?PermitEmptyPasswords" line="PermitEmptyPasswords no"

    - name: Disable remote root login
      lineinfile: dest={{ sshd_config }} regexp="^#?PermitRootLogin" line="PermitRootLogin no"

    - name: Disable password login
      lineinfile: dest={{ sshd_config }} regexp="^#?PasswordAuthentication" line="PasswordAuthentication no"

    - name: Install required packages
      apt: state=installed pkg={{ item }}
      with_items: "{{ ubuntu_common_required_packages }}"

    - name: Configure automatic updates
      copy: src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic

    - name: Allow ssh traffic on the new ssh port
      ufw: rule=allow port="{{ ubuntu_common_ssh_port }}" proto=tcp

    - name: Change ssh port
      lineinfile: dest=/etc/ssh/sshd_config regexp="^Port\s" line="Port {{ubuntu_common_ssh_port}}" state=present

    - name: Setup ufw
      ufw: state=enabled policy=reject

    - name: Open ufw ports
      ufw: rule=allow port={{ item }}
      with_items: "{{ ports_to_be_opened }}"

    - name: restart server
      shell: sleep 2 && shutdown -r now
      async: 1
      poll: 0
      sudo: false
      ignore_errors: true

    - name: waiting for server to come back after reboot
      local_action:
          module: wait_for
            host={{ inventory_hostname }}
            port={{ ubuntu_common_ssh_port }}
            delay=1
            timeout=45
      sudo: false
