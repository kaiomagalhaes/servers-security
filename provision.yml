- name: main
  remote_user: root
  hosts: server_to_be_secured
  vars:
    server_manager_user: deploy
    server_manager_user_password: pipoca
    github_user: kaiomagalhaes

    sshd_config: /etc/ssh/sshd_config

    ubuntu_common_required_packages:
      - ufw
      - fail2ban
      - unattended-upgrades
      - logwatch

    ubuntu_common_ssh_port: 368

  gather_facts: no

  pre_tasks:
    - raw: sudo apt-get -y install python-simplejson

  tasks:
    - name: Upgrade packages
      apt:
        update_cache: yes
        upgrade: dist

    - name: Create {{ server_manager_user }} user
      user: name={{ server_manager_user }}
            password={{ server_manager_user_password }}
            state=present
            shell=/bin/bash
            generate_ssh_key=yes
            groups="sudo"

    - name: Set authorized key took from github using the user {{ github_user }}
      authorized_key:
        user: "{{ server_manager_user }}"
        state: present
        key: https://github.com/{{ github_user }}.keys

    - name: Change permission of the .ssh/authorized_keys to 400
      file: dest=/home/deploy/.ssh/authorized_keys  mode=400

    - name: Disable empty password login
      lineinfile: dest={{ sshd_config }} regexp="^#?PermitEmptyPasswords" line="PermitEmptyPasswords no"

#    - name: Disable remote root login
#      lineinfile: dest={{ sshd_config }} regexp="^#?PermitRootLogin" line="PermitRootLogin no"

    - name: Disable password login
      lineinfile: dest={{ sshd_config }} regexp="^#?PasswordAuthentication" line="PasswordAuthentication no"

    - name: Install required packages
      apt: state=installed pkg={{ item }}
      with_items: "{{ ubuntu_common_required_packages }}"

    - name: Configure automatic updates
      copy: src=apt_periodic dest=/etc/apt/apt.conf.d/10periodic

    - name: Setup ufw
      ufw: state=enabled policy=deny

    - name: Allow ssh traffic
      ufw: rule=allow port={{ ubuntu_common_ssh_port }} proto=tcp

    - name: Change ssh port
      lineinfile: dest=/etc/ssh/sshd_config
                  regexp="^Port\s"
                  line="Port {{ ubuntu_common_ssh_port }}"
                  state=present

#    - name: Restart server
#      shell: reboot
#      async: 0
#      poll: 0
#      ignore_errors: true
